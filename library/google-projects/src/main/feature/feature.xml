<?xml version="1.0" encoding="UTF-8"?>
<!--

      Licensed to the Apache Software Foundation (ASF) under one or more
      contributor license agreements.  See the NOTICE file distributed with
      this work for additional information regarding copyright ownership.
      The ASF licenses this file to You under the Apache License, Version 2.0
      (the "License"); you may not use this file except in compliance with
      the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
-->
<features name="library-google-commons-${project.version}"
          xmlns="http://karaf.apache.org/xmlns/features/v1.2.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="
          http://karaf.apache.org/xmlns/features/v1.2.0 http://karaf.apache.org/xmlns/features/v1.2.0">
    <feature name="guava"
             description="Guava: Google Core Libraries for Java 1.6+"
             version="${google.guava.version}"  resolver="(obr)">
        <details>
            url:http://code.google.com/p/guava-libraries/
            The Guava project contains several of Google's core libraries that we rely on in our Java-based projects: collections, caching, primitives support, concurrency libraries, common annotations, string processing, I/O, and so forth.
        </details>
        <bundle>mvn:com.google.guava/guava/${google.guava.version}</bundle>
    </feature>

    <feature name="guice"
             description="Guice (pronounced 'juice') is a lightweight dependency injection framework for Java 6 and above, brought to you by Google."
             version="${google.guice.version}"  resolver="(obr)">
        <details>
            url:https://github.com/google/guice
            Put simply, Guice alleviates the need for factories and the use of new in your Java code. Think of Guice's @Inject as the new new. You will still need to write factories in some cases, but your code will not depend directly on them. Your code will be easier to change, unit test and reuse in other contexts.
        </details>
        <feature>javax-inject</feature>
        <feature>aopalliance</feature>
        <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.guice/${google.guice.bundle.version}</bundle>
    </feature>

    <feature name="gson" description="Google Gson library"  version="${google.gson.version}"  resolver="(obr)">
        <bundle>mvn:com.google.code.gson/gson/${google.gson.version}</bundle>
    </feature>
</features>